services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: jourlay-postgres
    environment:
      POSTGRES_DB: jourlaydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - jourlay-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d jourlaydb"]
      interval: 30s
      timeout: 10s
      retries: 5

  # .NET API Backend
  api:
    build:
      context: .
      dockerfile: Jourlay.API/Dockerfile
    container_name: jourlay-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=jourlaydb;Username=postgres;Password=123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - jourlay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # React Frontend
  frontend:
    build:
      context: ./jourlay-react-app
      dockerfile: Dockerfile
    container_name: jourlay-frontend
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - jourlay-network
    environment:
      - REACT_APP_API_URL=http://localhost:8080

networks:
  jourlay-network:
    driver: bridge

volumes:
  postgres_data: